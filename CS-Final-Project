#include <iostream>
#include <iomanip>
#include <string>
using namespace std;

// calculate average
float calculateAverage(float g_Sci, float g_Math, float g_Eng, float g_Art, float g_hstry) {
    return (g_Sci + g_Math + g_Eng + g_Art + g_hstry) / 5.0f;
}

// find highest
float findHighest(float g_Sci, float g_Math, float g_Eng, float g_Art, float g_hstry) {
    float highest = g_Sci;
    if (g_Math > highest) highest = g_Math;
    if (g_Eng > highest) highest = g_Eng;
    if (g_Art > highest) highest = g_Art;
    if (g_hstry > highest) highest = g_hstry;
    return highest;
}

// find lowest
float findLowest(float g_Sci, float g_Math, float g_Eng, float g_Art, float g_hstry) {
    float lowest = g_Sci;
    if (g_Math < lowest) lowest = g_Math;
    if (g_Eng < lowest) lowest = g_Eng;
    if (g_Art < lowest) lowest = g_Art;
    if (g_hstry < lowest) lowest = g_hstry;
    return lowest;
}

// grade equivalent
float getGwa(float average) {
    if (average >= 96) return 1.0f;
    if (average >= 94) return 1.25f;
    if (average >= 92) return 1.5f;
    if (average >= 90) return 1.75f;
    if (average >= 88) return 2.0f;
    if (average >= 86) return 2.25f;
    if (average >= 84) return 2.5f;
    if (average >= 82) return 2.75f;
    if (average >= 80) return 3.0f;
    return 5.0f;
}

// count passing subjects (>=75 considered passing)
int countPassing(float g1, float g2, float g3, float g4, float g5) {
  //jadee this one ples

// get valid grade
float getGrade(const string& subject) {
    float grade;
    do {
        cout << "Enter " << subject << " grade (0-100): ";
        cin >> grade;
        if (grade < 0 || grade > 100) {
            cout << "Invalid input. Please enter a grade between 0 and 100." << endl;
        }
    } while (grade < 0 || grade > 100);
    return grade;
}

// Directorâ€™s List check
bool checkDirectorsList(float gwa) {
    return (gwa <= 1.5f);
}

int main() {
    string name;
    int id, age, g_Level;

    cout << "Enter name: ";
    cin >> name;
    cout << "Enter ID number: ";
    cin >> id;
    cout << "Enter age: ";
    cin >> age;
    cout << "Enter grade level: ";
    cin >> g_Level;

    // grade entry
    cout << "\nGRADE ENTRY\n" << endl;
    float sci = getVGrade("Science");
    float eng = getGrade("English");
    float art = getGrade("Art");
    float math = getGrade("Math");
    float hstry = getGrade("History");

    float average = calculateAverage(sci, math, eng, art, hstry);
    float highest = findHighest(sci, math, eng, art, hstry);
    float lowest = findLowest(sci, math, eng, art, hstry);
    int passing = countPassing(sci, math, eng, art, hstry);
    float gwa = getGwa(average);

    cout << "\nSTUDENT INFORMATION\n" << endl;
    cout << "Name: " << name << endl;
    cout << "ID: " << id << endl;
    cout << "Age: " << age << " years old" << endl;
    cout << "Grade level: " << g_Level << endl;
    cout << "Birth year: " << (2025 - age) << endl;

    cout << "\nSUBJECT GRADES:\n" << endl;
    cout << "Math: " << math << "%" << endl;
    cout << "Science: " << sci << "%" << endl;
    cout << "English: " << eng << "%" << endl;
    cout << "History: " << hstry << "%" << endl;
    cout << "Art: " << art << "%" << endl;

    cout << "\nGRADE STATISTICS:\n" << endl;
    cout << fixed << setprecision(2);
    cout << "Average grade: " << average << "%" << endl;
    cout << "Grade Equivalent: " << gwa << endl;
    cout << "Highest grade: " << highest << "%" << endl;
    cout << "Lowest grade: " << lowest << "%" << endl;
    cout << "Passed: " << passing << " out of 5 subjects" << endl;

    cout << "\nGWA: " << gwa << endl;

    if (checkDirectorsList(gwa)) {
        cout << "Director's List Status: yeaas" << endl;
    } else {
        cout << "Director's List Status: no :((" << endl;
    }

    return 0;
}
